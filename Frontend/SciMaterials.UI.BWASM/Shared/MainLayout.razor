@using SciMaterials.UI.BWASM.States.Theme
@using Microsoft.IdentityModel.JsonWebTokens
@using SciMaterials.UI.BWASM.Components.Categories
@using SciMaterials.UI.BWASM.MessageBus
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IState<AppThemeState> ThemeState
@inject IDispatcher Dispatcher
@implements IDisposable

<MudThemeProvider Theme="ThemeState.Value.CurrentTheme" IsDarkMode="ThemeState.Value.IsDarkTheme"/>
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Edge="Edge.Start" OnClick="DrawerToggle" />
        <MudSpacer />
        <AuthState/>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
	    <MudDrawerHeader>
		    <MudText Typo="Typo.h6" @onclick="NavigateToHomePage" Class="cursor-pointer">SCI MATERIALS</MudText>
	    </MudDrawerHeader>

	    <AuthorizeView>
		    <Authorized>
				<MudButton Class="border-1 py-2 px-2 mx-4 mb-4 rounded-lg justify-start" Style="height: 60px;" OnClick="OpenProfile">
					<MudStack Row="true" Class="align-center">
						@{
							var username = @context.User.FindFirst(c => c.Type == JwtRegisteredClaimNames.UniqueName).Value;
						}
						<MudAvatar Color="Color.Dark">@username?[0]</MudAvatar>
						<MudText GutterBottom="false">@username</MudText>
					</MudStack>
			    </MudButton>
		    </Authorized>
			@*Dummy*@
		    <NotAuthorized>
			    <MudButton Class="border-1 py-2 px-2 mx-4 mb-4 rounded-lg" Style="height: 60px;" Disabled="true">
				    <MudText Class="align-center">Not Authorized</MudText>
			    </MudButton>
		    </NotAuthorized>
	    </AuthorizeView>

        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.False" Class="mt-4">
            @Body
        </MudContainer>
    </MudMainContent>
    <CategoryTreeSidePanel @bind-Hidden="_categoryTreeSidePanelHidden" />
</MudLayout>



@code {
    bool _drawerOpen = true;
	bool _categoryTreeSidePanelHidden = true;

    [Inject]
    public ISimpleMessageBus SimpleMessageBus { get; set; } = default!;

    protected override void OnInitialized()
    {
		Dispatcher.Dispatch(AppThemeActions.ChangeColorScheme("default"));
        SimpleMessageBus.Subscribe<ResourceCardsPageVisibilityMessage>(SetCategoryTreePanelVivibility);
    }

    private void DrawerToggle() => _drawerOpen = !_drawerOpen;

    private void NavigateToHomePage() => NavigationManager.NavigateTo("/");

	private void OpenProfile() => NavigationManager.NavigateTo("/profile");
    
	    private void SetCategoryTreePanelVivibility(object? sender, ResourceCardsPageVisibilityMessage message)
    {
        _categoryTreeSidePanelHidden = !message.IsVisible;
        StateHasChanged();
    }

	public void Dispose()
    {
        SimpleMessageBus.Unsubscribe<ResourceCardsPageVisibilityMessage>(SetCategoryTreePanelVivibility);
    }	
}

